{"version":3,"sources":["Components/ExpenseFilter.js","Components/Chart/ChartBar.js","Components/Chart/Chart.js","Components/ExpensesChart.js","Components/ExpenseDate.js","Components/ExpenseItem.js","Components/ExpensesList.js","Components/Expenses.js","Components/ExpenseForm.js","Components/NewExpense.js","App.js","reportWebVitals.js","index.js"],"names":["ExpenseFilter","props","className","htmlFor","id","value","selected","onChange","event","onChangeFilter","target","ChartBar","barFill","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","map","dataPoint","totalMax","max","ExpensesChart","chartDataPoints","expenses","expense","date","getMonth","amount","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","title","ExpensesList","items","length","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","dummyExpenses","App","setExpenses","addedExpenseData","prevExpenses","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9920f273.chunk.js","sourcesContent":["import './ExpenseFilter.css';\r\n\r\nfunction ExpenseFilter(props) {\r\n    const dropdownChangeHandler = (event) => {\r\n        props.onChangeFilter(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"expenses-filter\">\r\n            <div className=\"expenses-filter__control\">\r\n                <label htmlFor=\"filter\">Filter by year</label>\r\n                <select id=\"filter\" value={props.selected} onChange={dropdownChangeHandler}>\r\n                    <option value=\"2022\">2022</option>\r\n                    <option value=\"2021\">2021</option>\r\n                    <option value=\"2020\">2020</option>\r\n                    <option value=\"2019\">2019</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExpenseFilter;","import './ChartBar.css'\r\n\r\nfunction ChartBar(props) {\r\n    let barFill = '0%';\r\n\r\n    if(props.maxValue > 0) {\r\n        barFill = Math.round((props.value / props.maxValue) * 100) + '%';\r\n    }\r\n\r\n    return (\r\n        <div className=\"chart-bar\">\r\n            <div className=\"chart-bar__inner\">\r\n                <div className=\"chart-bar__fill\" style={{height: barFill}}></div>\r\n            </div>\r\n            <div className=\"chart-bar__label\">{props.label}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChartBar;","import './Chart.css';\r\nimport ChartBar from './ChartBar'\r\n\r\nfunction Chart(props) {\r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMax = Math.max(...dataPointValues);\r\n\r\n    return (\r\n        <div className=\"chart\">\r\n            {props.dataPoints.map(dataPoint => {\r\n                return <ChartBar key={dataPoint.label} value={dataPoint.value} maxValue={totalMax} label={dataPoint.label} />\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chart;   ","import Chart from \"./Chart/Chart\";\r\n\r\nfunction ExpensesChart(props) {\r\n    const chartDataPoints = [\r\n        {label: 'Jan', value: 0},\r\n        {label: 'Feb', value: 0},\r\n        {label: 'Mar', value: 0},\r\n        {label: 'Apr', value: 0},\r\n        {label: 'May', value: 0},\r\n        {label: 'Jun', value: 0},\r\n        {label: 'Jul', value: 0},\r\n        {label: 'Aug', value: 0},\r\n        {label: 'Sep', value: 0},\r\n        {label: 'Oct', value: 0},\r\n        {label: 'Nov', value: 0},\r\n        {label: 'Dec', value: 0},\r\n    ];\r\n\r\n    for (const expense of props.expenses) {\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n    return <Chart dataPoints={chartDataPoints} />\r\n};\r\n\r\nexport default ExpensesChart;","import './ExpenseDate.css';\r\n\r\nfunction ExpenseDate (props) {\r\n    const month = props.date.toLocaleString('en-US', {month: 'long'});\r\n    const day = props.date.toLocaleString('en-US', {day: '2-digit'});\r\n    const year = props.date.getFullYear();\r\n\r\n    return(\r\n        <div className=\"expense-date\">\r\n            <div className=\"expense-date__month\">{month}</div>\r\n            <div className=\"expense-date__day\">{day}</div>\r\n            <div className=\"expense-date__year\">{year}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExpenseDate;","import './ExpenseItem.css';\r\nimport ExpenseDate from './ExpenseDate';\r\n\r\nfunction ExpenseItem (props) {\r\n    return (\r\n        <li>\r\n            <div className=\"expense-item\">\r\n                <ExpenseDate date={props.date}></ExpenseDate>\r\n                <div className=\"expense-item__description\">\r\n                    <h2>{props.title}</h2>\r\n                    <div className=\"expense-item__price\">${props.amount}</div>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default ExpenseItem;","import './ExpensesList.css'\r\nimport ExpenseItem from './ExpenseItem';\r\n\r\nfunction ExpensesList(props) {\r\n\r\n    if(props.items.length === 0) {\r\n        return <h2 className=\"expenses-list__fallback\">No Expenses Found!</h2>\r\n    }\r\n\r\n    return (\r\n        <ul className=\"expenses-list\">\r\n            {props.items.map((expense) => (\r\n            <ExpenseItem\r\n                key={expense.id}\r\n                title = {expense.title}\r\n                amount = {expense.amount}\r\n                date = {expense.date}\r\n            />\r\n            ))}\r\n        </ul>\r\n    );\r\n}; \r\n\r\nexport default ExpensesList;","import { useState } from \"react\";\r\nimport ExpenseFilter from \"./ExpenseFilter\";\r\nimport './Expenses.css'\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport ExpensesList from \"./ExpensesList\";\r\n\r\nfunction Expenses(props) {\r\n    const [filteredYear, setFilteredYear] = useState('2020');\r\n\r\n    const filterChangeHandler = (selectedYear) => {\r\n        setFilteredYear(selectedYear);\r\n    };\r\n\r\n    const filteredExpenses = props.items.filter(expense => {\r\n        return expense.date.getFullYear().toString() === filteredYear;\r\n    });\r\n\r\n    return (\r\n        <div className=\"expenses\">\r\n            <ExpenseFilter selected={filteredYear} onChangeFilter={filterChangeHandler}></ExpenseFilter>\r\n            <ExpensesChart expenses={filteredExpenses} />\r\n            <ExpensesList items={filteredExpenses} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Expenses;","import { useState } from 'react';\r\nimport './ExpenseForm.css'\r\n\r\nfunction ExpenseForm(props) {\r\n    const [enteredTitle, setEnteredTitle] = useState('');\r\n    const [enteredAmount, setEnteredAmount] = useState('');\r\n    const [enteredDate, setEnteredDate] = useState('');\r\n\r\n    const titleChangeHandler = (event) => {\r\n        setEnteredTitle(event.target.value);\r\n    };\r\n    const amountChangeHandler = (event) => {\r\n        setEnteredAmount(event.target.value);\r\n    };\r\n    const dateChangeHandler = (event) => {\r\n        setEnteredDate(event.target.value);\r\n    };\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: +enteredAmount,\r\n            date: new Date(enteredDate)\r\n        }\r\n        props.onSaveExpenseData(expenseData);\r\n        setEnteredTitle('');\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div className=\"new-expense__controls\">\r\n                <div className=\"new-expense__control\">\r\n                    <label htmlFor=\"title\">Title</label>\r\n                    <input type=\"text\" id=\"title\" value={enteredTitle} onChange={titleChangeHandler} />\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label htmlFor=\"amount\">Amount</label>\r\n                    <input type=\"number\" id=\"amount\" min=\"0.01\" step=\"0.01\" value={enteredAmount} onChange={amountChangeHandler} />\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label htmlFor=\"date\">Date</label>\r\n                    <input type=\"date\" id=\"date\" min=\"2019-01-01\" max=\"2022-12-31\" value={enteredDate} onChange={dateChangeHandler}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"new-expense__actions\">\r\n                <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n                <button type=\"submit\">Add Expense!</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default ExpenseForm;","import { useState } from 'react';\r\nimport ExpenseForm from './ExpenseForm';\r\nimport './NewExpense.css'\r\n\r\nfunction NewExpense(props) {\r\n    const [isEditing, setIsEditing] = useState(false);\r\n\r\n    const saveExpenseDataHandler = (enteredExpenseData) => {\r\n        const expenseData = {\r\n            ...enteredExpenseData,\r\n            id: Math.random().toString()\r\n        };\r\n        props.onAddExpense(expenseData);\r\n        setIsEditing(false);\r\n    };\r\n\r\n    const startEditingHandler = () => {\r\n        setIsEditing(true);\r\n    };\r\n\r\n    const stopEditingHandler = () => {\r\n        setIsEditing(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"new-expense\">\r\n            {!isEditing ? <button type=\"button\" onClick={startEditingHandler}>Add New Expense!</button> : \r\n            <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={stopEditingHandler} /> }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewExpense;","import './App.css';\nimport { useState } from 'react';\nimport Expenses from './Components/Expenses';\nimport NewExpense from './Components/NewExpense';\n\nconst dummyExpenses = [\n  {\n      id: 'e1',\n      title: 'Toilet Paper',\n      amount: 94.12,\n      date: new Date(2020, 7, 14),\n  },\n  { \n      id: 'e2',\n      title: 'New TV',\n      amount: 799.49,\n      date: new Date(2021, 2, 12) },\n  {\n      id: 'e3',\n      title: 'Car Insurance',\n      amount: 294.67,\n      date: new Date(2021, 2, 28),\n  },\n  {\n      id: 'e4',\n      title: 'New Desk (Wooden)',\n      amount: 450,\n      date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n  const [expenses, setExpenses] = useState(dummyExpenses);\n\n  const addExpenseHandler = (addedExpenseData) => {\n    setExpenses(prevExpenses => {\n      return [addedExpenseData, ...expenses]\n    });\n  };\n\n  return (\n    <div className=\"App-header\">\n      <NewExpense onAddExpense={addExpenseHandler}></NewExpense>\n      <Expenses items={expenses}></Expenses>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}